#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt TAB Q         &kp W            &kp E         &kp R               &kp T                                                       &kp Y       &kp U  &mt LS(N8) I  &mt LS(N9) O  &kp P
&mt AT A          &mt AMPERSAND S  &kp D         &kp F               &kp G      &kp LS(LG(S))                     &kp BACKSPACE  &kp H       &kp J  &kp K         &kp L         &kp ENTER
&mt LEFT_SHIFT Z  &kp X            &kp C         &kp V               &kp B      &mt LC(LS(DELETE)) LG(LS(S))      &kp DELETE     &kp N       &kp M  &kp MINUS     &kp SLASH     &kp SEMI
&kp LCTRL         &kp LEFT_WIN     &kp LEFT_ALT  &mt LEFT_SHIFT TAB  &kp SPACE  &kp LANG_ZENKAKUHANKAKU           &kp COMMA      &kp PERIOD                                     &lt_to_layer_0 6 SINGLE_QUOTE
            >;
            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        Cus_Symbol {
            bindings = <
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH    &kp DOLLAR      &kp PERCENT                                                                           &kp AMPERSAND           &kp APOSTROPHE     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&kp AT           &kp AMPERSAND      &kp DOLLAR  &none           &none                   &trans                           &kp BACKSPACE                &kp DOUBLE_QUOTES       &kp DOUBLE_QUOTES  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp ENTER
&kp LEFT_SHIFT   &none              &none       &none           &none                   &to_layer_0 KP_NUMBER_0          &kp DEL                      &kp COMMA               &kp PERIOD         &kp MINUS             &kp SLASH              &kp SEMI
&trans           &trans             &trans      &kp LEFT_SHIFT  &lt_to_layer_0 1 SPACE  &lt_to_layer_0 2 LANGUAGE_1      &lt_to_layer_0 3 LANGUAGE_2  &lt_to_layer_0 4 SPACE                                                                  &kp SINGLE_QUOTE
            >;
            sensor-bindings = <&encoder_msc_down_up>;
        };

        Cos_Number {
            bindings = <
&trans  &none            &kp KP_LEFT_PARENTHESIS  &kp KP_RIGHT_PARENTHESIS  &none                                                                                 &kp KP_NUMBER_0         &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &none
&none   &kp KP_PLUS      &kp KP_MINUS             &kp KP_EQUAL              &none                   &trans                           &kp BACKSPACE                &kp KP_EQUAL            &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ENTER
&trans  &kp KP_MULTIPLY  &kp KP_DIVIDE            &none                     &none                   &trans                           &kp DEL                      &kp KP_DOT              &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0
&trans  &trans           &trans                   &none                     &lt_to_layer_0 1 SPACE  &lt_to_layer_0 2 LANGUAGE_1      &lt_to_layer_0 3 LANGUAGE_2  &lt_to_layer_0 4 SPACE                                                     &none
            >;
            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        Cus_Arrow {
            bindings = <
&trans  &none               &kp LG(UP_ARROW)  &none                &none                                                                          &none                    &none           &kp UP_ARROW  &none      &none
&none   &kp LG(LEFT_ARROW)  &kp LG(TAB)       &kp LG(RIGHT_ARROW)  &none                    &trans                       &none                    &none                    &kp LEFT_ARROW  &none         &kp RIGHT  &kp ENTER
&trans  &none               &none             &none                &none                    &trans                       &none                    &none                    &none           &kp DOWN      &none      &none
&trans  &trans              &trans            &none                &to_layer_0 KP_NUMBER_1  &to_layer_0 KP_NUMBER_2      &to_layer_0 KP_NUMBER_3  &to_layer_0 KP_NUMBER_4                                           &none
            >;
            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &none   &mkp MB5  &kp PAGE_UP    &none     &none
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &none   &mkp MB1  &mkp MB2       &mkp MB3  &kp ENTER
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &none   &mkp MB4  &kp PAGE_DOWN  &none     &none
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                     &trans
            >;
            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        BT_Selection {
            bindings = <
&none  &none  &none  &none   &none                               &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none  &none  &none  &none   &none   &trans      &studio_unlock  &none         &none         &none         &none         &none
&none  &none  &none  &none   &none   &trans      &bootloader     &none         &none         &none         &none         &bt BT_CLR
&none  &none  &none  &trans  &trans  &trans      &trans          &trans                                                  &bt BT_CLR_ALL
            >;
            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5                      &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&kp F11  &kp F12  &none   &none   &none   &none       &none   &none   &none   &none   &none   &none
&none    &none    &none   &none   &none   &none       &none   &none   &none   &none   &none   &none
&none    &none    &none   &trans  &trans  &trans      &trans  &trans                          &none
            >;
            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };
    };
};
