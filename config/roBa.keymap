#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define JP_DQUOTE       AT
#define JP_AMPERSAND    CARET
#define JP_QUOTE        AMPERSAND
#define JP_EQUAL        UNDER
#define JP_CARET        EQUAL
#define JP_YEN          0x89
#define JP_PLUS         COLON
#define JP_TILDE        PLUS
#define JP_PIPE         LS(0x89)
#define JP_AT           LEFT_BRACKET
#define JP_COLON        SINGLE_QUOTE
#define JP_ASTERISK     DOUBLE_QUOTES
#define JP_BACKQUOTE    LEFT_BRACE
#define JP_UNDERSCORE   LS(0x87)
#define JP_LBRACKET     RIGHT_BRACKET
#define JP_RBRACKET     BACKSLASH
#define JP_LPAREN       ASTERISK
#define JP_RPAREN       LEFT_PARENTHESIS
#define JP_LBRACE       RIGHT_BRACE
#define JP_RBRACE       PIPE
#define JP_KANA         LANGUAGE_1
#define JP_EISU         LANGUAGE_2
#define JP_HANZEN       GRAVE

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
    tapping-term-ms = <300>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        Zoom_In {
            bindings = <&kp LC(KP_PLUS)>;
            key-positions = <7 24>;
        };

        Zoom_Out {
            bindings = <&kp LC(KP_MINUS)>;
            key-positions = <31 24>;
        };

        Win_up {
            bindings = <&kp LG(UP_ARROW)>;
            key-positions = <7 24>;
        };

        Win_Down {
            bindings = <&kp LG(DOWN_ARROW)>;
            key-positions = <31 24>;
        };

        Win_Left {
            bindings = <&kp LG(LEFT_ARROW)>;
            key-positions = <18 24>;
        };

        Win_Right {
            bindings = <&kp LG(RIGHT_ARROW)>;
            key-positions = <20 24>;
        };

        Ctr_5 {
            bindings = <&kp LC(KP_NUMBER_5)>;
            key-positions = <4 24>;
        };

        Layer_0 {
            bindings = <&to_layer_0 N0>;
            key-positions = <37 24>;
        };

        Layer_1 {
            bindings = <&to_layer_0 NUMBER_1>;
            key-positions = <38 24>;
        };

        Layer_2 {
            bindings = <&to_layer_0 NUMBER_2>;
            key-positions = <39 24>;
        };

        Layer_3 {
            bindings = <&to_layer_0 NUMBER_3>;
            key-positions = <40 24>;
        };

        Layer_4 {
            bindings = <&to_layer_0 NUMBER_4>;
            key-positions = <41 24>;
        };

        Layer_6 {
            bindings = <&to_layer_0 NUMBER_6>;
            key-positions = <42 24>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt TAB Q         &kp W            &kp E         &kp R               &kp T                                                              &kp Y       &kp U  &mt JP_LPAREN I          &mt JP_RPAREN O      &kp P
&mt AT A          &mt AMPERSAND S  &kp D         &kp F               &kp G      &kp LS(LG(S))                     &kp BACKSPACE         &kp H       &kp J  &kp K                    &kp L                &kp ENTER
&mt LEFT_SHIFT Z  &kp X            &kp C         &kp V               &kp B      &mt LC(LS(DELETE)) LG(LS(S))      &kp DELETE            &kp N       &kp M  &mt JP_UNDERSCORE MINUS  &mt LS(SLASH) SLASH  &mt JP_COLON SEMI
&kp LCTRL         &kp LEFT_WIN     &kp LEFT_ALT  &mt LEFT_SHIFT TAB  &kp SPACE  &mt JP_HANZEN LANGUAGE_1          &mt LANGUAGE_2 COMMA  &kp PERIOD                                                       &mt JP_DQUOTE SINGLE_QUOTE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        Cus_Symbol {
            bindings = <
&kp EXCLAMATION  &kp JP_DQUOTE     &kp HASH    &kp DOLLAR  &kp PERCENT                                              &kp JP_AMPERSAND  &kp SINGLE_QUOTE  &kp JP_LPAREN     &kp JP_RPAREN      &none
&kp AT           &kp JP_AMPERSAND  &kp DOLLAR  &none       &none        &trans                       &kp BACKSPACE  &kp JP_DQUOTE     &kp JP_DQUOTE     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp ENTER
&kp LEFT_SHIFT   &none             &none       &none       &none        &to_layer_0 KP_NUMBER_0      &kp DEL        &kp COMMA         &kp PERIOD        &trans            &trans             &trans
&trans           &trans            &trans      &trans      &trans       &trans                       &trans         &trans                                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        Cos_Number {
            bindings = <
&trans  &none            &kp KP_LEFT_PARENTHESIS  &kp KP_RIGHT_PARENTHESIS  &none                              &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &none
&none   &kp KP_PLUS      &kp KP_MINUS             &kp KP_EQUAL              &none   &trans      &kp BACKSPACE  &kp KP_EQUAL     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ENTER
&trans  &kp KP_MULTIPLY  &kp KP_DIVIDE            &none                     &none   &trans      &kp DEL        &kp KP_DOT       &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0
&trans  &trans           &trans                   &trans                    &trans  &trans      &trans         &trans                                                              &none
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        Cus_Arrow {
            bindings = <
&trans  &none               &kp LG(UP_ARROW)  &none                &none                       &none   &none           &kp UP_ARROW  &none      &none
&none   &kp LG(LEFT_ARROW)  &kp LG(TAB)       &kp LG(RIGHT_ARROW)  &none   &trans      &none   &none   &kp LEFT_ARROW  &none         &kp RIGHT  &kp ENTER
&trans  &none               &none             &none                &none   &trans      &none   &none   &none           &kp DOWN      &none      &none
&trans  &trans              &trans            &trans               &trans  &trans      &trans  &trans                                           &none
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &none   &mkp MB5  &kp PAGE_UP    &none     &none
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &none   &mkp MB1  &mkp MB2       &mkp MB3  &kp ENTER
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &none   &mkp MB4  &kp PAGE_DOWN  &none     &none
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                     &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        BT_Selection {
            bindings = <
&none   &none   &none   &none   &none                               &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none   &none   &none   &none   &none   &trans      &studio_unlock  &none         &none         &none         &none         &none
&none   &none   &none   &none   &none   &trans      &bootloader     &none         &none         &none         &none         &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans          &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5                      &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&kp F11  &kp F12  &none   &none   &none   &none       &none   &none   &none   &none   &none   &none
&none    &none    &none   &none   &none   &none       &none   &none   &none   &none   &none   &none
&none    &none    &none   &trans  &trans  &trans      &trans  &trans                          &none
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };
    };
};
